## Spring Application Name Configure
spring.application.name=Donghae_zip

## Web Application type
spring.main.web-application-type=servlet

## Server Port
server.port=8080

# JWT SECRET KEY
myapp.secret=${JWT_SECRET_KEY}

# Servlet Encoding Config
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

## Logging Setting
logging.level.org.boot.blog=trace
logging.file.name=src/main/resources/spring_boot.log

## MySQL
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/donghae_zip?&serverTimezone=UTC&autoReconnect=true&allowMultiQueries=true&characterEncoding=UTF-8
spring.datasource.username=${DB_USER_NAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## Ignoring JPA default naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

## Hikari
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=60000

## Swagger Configuration
## Swagger UI Path
springdoc.swagger-ui.path=/api-test-swagger
## API DESC Sort
springdoc.swagger-ui.groups-order=DESC
## API Tag Sort
springdoc.swagger-ui.tags-sorter=alpha
## HTTP Method(delete, get, patch, post, put) Sort
springdoc.swagger-ui.operations-sorter=method

# Console logging pattern (optional)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# JSON print config
spring.jackson.serialization.indent_output=true

# Base URL
baseUrl=http://localhost:8080

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET_KEY}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile, email

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_REST_API_KEY}
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


#KaKao Map API
kakao.api.key=${KAKAO_REST_API_KEY}


# Naver OAuth2 API
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET_KEY}
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response